CREATE OR REPLACE FUNCTION licencia_obtenerdatos(p_licencia_idlic BIGINT)
RETURNS TABLE(
    idlic BIGINT,
    tipo VARCHAR(55),
    titular VARCHAR(255),
    ruc VARCHAR(20),
    razonsocial VARCHAR(255),
    direccionfiscal VARCHAR(255),
    nombrecomercial VARCHAR(255),
    representantelegal_dni VARCHAR(55),
    representantelegal_nombre VARCHAR(55),
    actividadcomercial VARCHAR(450),
    localcondicion VARCHAR(450),
    area VARCHAR(55),
    aforo INTEGER,
    pagomonto VARCHAR(55),
    pago_coperacion VARCHAR(75),
    pagovoucher_url VARCHAR(55),
    direccioncomercial VARCHAR(55),
    dir_numero VARCHAR(10),
    dir_letra VARCHAR(10),
    dir_inter VARCHAR(10),
    dir_mz VARCHAR(10),
    dir_lote VARCHAR(10),
    dir_dpto VARCHAR(10),
    dir_referencia VARCHAR(55),
    zonificacion VARCHAR(55),
    tipoinspeccion VARCHAR(55),
    resultado_itse VARCHAR(55),
    riesgoitse VARCHAR(55),
    estado VARCHAR(75),
    observacion VARCHAR(455),
    vigencia_estado VARCHAR(55),
    vigencia_tipo VARCHAR(55),
    vigencia_duracionmeses INTEGER,
    fechaemision DATE,
    fechavencimiento DATE,
    fecharegistro TIMESTAMP,
    fechaultimamod TIMESTAMP,
    numero INTEGER,
    resolucion_numero INTEGER,
    resolucion_url VARCHAR(455),
    certificado_url VARCHAR(455),
    consultasverificacion INTEGER,
    procedencia_solicitud VARCHAR(20),
    usuarioid BIGINT,
    usuarionombre VARCHAR(45),
    codigoqr VARCHAR(20),
    ubigeoid BIGINT,
    documento_id BIGINT
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        l.licencia_idlic AS idlic,
        l.licencia_tipo AS tipo,
        l.licencia_titular AS titular,
        l.licencia_ruc AS ruc,
        l.licencia_razonsocial AS razonsocial,
        l.licencia_direccionfiscal AS direccionfiscal,
        l.licencia_nombrecomercial AS nombrecomercial,
        l.licencia_representantelegal_dni AS representantelegal_dni,
        l.licencia_representantelegal_nombre AS representantelegal_nombre,
        l.licencia_actividadcomercial AS actividadcomercial,
        l.licencia_localcondicion AS localcondicion,
        l.licencia_area AS area,
        l.licencia_aforo AS aforo,
        l.licencia_pagomonto AS pagomonto,
        l.licencia_pago_coperacion AS pago_coperacion,
        l.licencia_pagovoucher_url AS pagovoucher_url,
        l.licencia_direccioncomercial AS direccioncomercial,
        l.licencia_dir_numero AS dir_numero,
        l.licencia_dir_letra AS dir_letra,
        l.licencia_dir_inter AS dir_inter,
        l.licencia_dir_mz AS dir_mz,
        l.licencia_dir_lote AS dir_lote,
        l.licencia_dir_dpto AS dir_dpto,
        l.licencia_dir_referencia AS dir_referencia,
        l.licencia_zonificacion AS zonificacion,
        l.licencia_tipoinspeccion AS tipoinspeccion,
        l.licencia_resultado_itse AS resultado_itse,
        l.licencia_riesgoitse AS riesgoitse,
        l.licencia_estado AS estado,
        l.licencia_observacion AS observacion,
        l.licencia_vigencia_estado AS vigencia_estado,
        l.licencia_vigencia_tipo AS vigencia_tipo,
        l.licencia_vigencia_duracionmeses AS vigencia_duracionmeses,
        l.licencia_fechaemision AS fechaemision,
        l.licencia_fechavencimiento AS fechavencimiento,
        l.licencia_fecharegistro AS fecharegistro,
        l.licencia_fechaultimamod AS fechaultimamod,
        l.licencia_numero AS numero,
        l.licencia_resolucion_numero AS resolucion_numero,
        l.licencia_resolucion_url AS resolucion_url,
        l.licencia_certificado_url AS certificado_url,
        l.licencia_consultasverificacion AS consultasverificacion,
        l.licencia_procedencia_solicitud AS procedencia_solicitud,
        l.licencia_usuarioid AS usuarioid,
        l.licencia_usuarionombre AS usuarionombre,
        l.licencia_codigoqr AS codigoqr,
        l.licencia_ubigeoid AS ubigeoid,
        l.licencia_documento_id AS documento_id
    FROM siga_licencia AS l
    WHERE l.licencia_idlic = p_licencia_idlic;
END;
$$ LANGUAGE plpgsql;


---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION licencia_listartabla()
RETURNS TABLE(
    idlic BIGINT,
    tipo VARCHAR(55),
    titular VARCHAR(255),
    ruc VARCHAR(20),
    nombrecomercial VARCHAR(255),
    representantelegal_dni VARCHAR(55),
    representantelegal_nombre VARCHAR(55),
    estado VARCHAR(75),
    vigencia_estado VARCHAR(55),
    vigencia_duracionmeses INTEGER,
    fechaemision DATE,
    fechavencimiento DATE,
    certificado_url VARCHAR(455)
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        l.licencia_idlic AS idlic,
        l.licencia_tipo AS tipo,
        l.licencia_titular AS titular,
        l.licencia_ruc AS ruc,
        l.licencia_nombrecomercial AS nombrecomercial,
        l.licencia_representantelegal_dni AS representantelegal_dni,
        l.licencia_representantelegal_nombre AS representantelegal_nombre,
        l.licencia_estado AS estado,
        l.licencia_vigencia_estado AS vigencia_estado,
        l.licencia_vigencia_duracionmeses AS vigencia_duracionmeses,
        l.licencia_fechaemision AS fechaemision,
        l.licencia_fechavencimiento AS fechavencimiento,
        l.licencia_certificado_url AS certificado_url
    FROM siga_licencia AS l;
END;
$$ LANGUAGE plpgsql;



---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION licencia_insertarCompleto(
    p_licencia_tipotramite_tupa BIGINT,
    p_licencia_titular VARCHAR(255),
    p_licencia_ruc VARCHAR(20),
    p_licencia_razonsocial VARCHAR(255),
    p_licencia_direccionfiscal VARCHAR(255),
    p_licencia_nombrecomercial VARCHAR(255),
    p_licencia_representantelegal_dni VARCHAR(55),
    p_licencia_representantelegal_nombre VARCHAR(55),
    p_licencia_actividadcomercial VARCHAR(450),
    p_licencia_localcondicion VARCHAR(450),
    p_licencia_area VARCHAR(55),
    p_licencia_aforo INTEGER,
    p_licencia_horario VARCHAR(125),
    p_licencia_pagomonto VARCHAR(55),
    p_licencia_pago_coperacion VARCHAR(75),
    p_licencia_pagovoucher_url VARCHAR(55),
    p_licencia_direccioncomercial VARCHAR(55),
    p_licencia_dir_numero VARCHAR(10),
    p_licencia_dir_letra VARCHAR(10),
    p_licencia_dir_inter VARCHAR(10),
    p_licencia_dir_mz VARCHAR(10),
    p_licencia_dir_lote VARCHAR(10),
    p_licencia_dir_dpto VARCHAR(10),
    p_licencia_dir_referencia VARCHAR(55),
    p_licencia_tipoinspeccion VARCHAR(55),
    p_licencia_resultado_itse VARCHAR(55),
    p_licencia_riesgoitse VARCHAR(55),
    p_licencia_observacion VARCHAR(455),
    p_licencia_vigencia_estado VARCHAR(55),
    p_licencia_vigencia_tipo VARCHAR(55),
    p_licencia_vigencia_duracionmeses INTEGER,
    p_licencia_fechavencimiento DATE,
    p_licencia_resolucion_numero INTEGER,
    p_licencia_resolucion_url VARCHAR(455),
    p_licencia_numero INTEGER,
    p_licencia_certificado_url VARCHAR(455),
    p_licencia_consultasverificacion INTEGER,
    p_licencia_procedencia_solicitud VARCHAR(20),
    p_licencia_usuarioid BIGINT,
    p_licencia_usuarionombre VARCHAR(45),
    p_licencia_codigoqr VARCHAR(20),
    p_licencia_ubigeoid BIGINT,
    p_licencia_documento_id BIGINT
) RETURNS BIGINT
LANGUAGE plpgsql
AS $$
DECLARE
    v_inserted_id BIGINT;
BEGIN
    INSERT INTO siga_licencia (
        licencia_tipotramite_tupa,
        licencia_titular,
        licencia_ruc,
        licencia_razonsocial,
        licencia_direccionfiscal,
        licencia_nombrecomercial,
        licencia_representantelegal_dni,
        licencia_representantelegal_nombre,
        licencia_actividadcomercial,
        licencia_localCondicion,
        licencia_area,
        licencia_aforo,
        licencia_horario,
        licencia_pagomonto,
        licencia_pago_coperacion,
        licencia_pagovoucher_url,
        licencia_direccioncomercial,
        licencia_dir_numero,
        licencia_dir_letra,
        licencia_dir_inter,
        licencia_dir_mz,
        licencia_dir_lote,
        licencia_dir_dpto,
        licencia_dir_referencia,
        licencia_tipoinspeccion,
        licencia_resultado_itse,
        licencia_riesgoitse,
        licencia_observacion,
        licencia_vigencia_estado,
        licencia_vigencia_tipo,
        licencia_vigencia_duracionmeses,
        licencia_fechavencimiento,
        licencia_resolucion_numero,
        licencia_resolucion_url,
        licencia_numero,
        licencia_certificado_url,
        licencia_consultasverificacion,
        licencia_procedencia_solicitud,
        licencia_usuarioid,
        licencia_usuarionombre,
        licencia_codigoqr,
        licencia_ubigeoid,
        licencia_documento_id
    ) VALUES (
        p_licencia_tipotramite_tupa,
        p_licencia_titular,
        p_licencia_ruc,
        p_licencia_razonsocial,
        p_licencia_direccionfiscal,
        p_licencia_nombrecomercial,
        p_licencia_representantelegal_dni,
        p_licencia_representantelegal_nombre,
        p_licencia_actividadcomercial,
        p_licencia_localcondicion,
        p_licencia_area,
        p_licencia_aforo,
        p_licencia_horario,
        p_licencia_pagomonto,
        p_licencia_pago_coperacion,
        p_licencia_pagovoucher_url,
        p_licencia_direccioncomercial,
        p_licencia_dir_numero,
        p_licencia_dir_letra,
        p_licencia_dir_inter,
        p_licencia_dir_mz,
        p_licencia_dir_lote,
        p_licencia_dir_dpto,
        p_licencia_dir_referencia,
        p_licencia_tipoinspeccion,
        p_licencia_resultado_itse,
        p_licencia_riesgoitse,
        p_licencia_observacion,
        p_licencia_vigencia_estado,
        p_licencia_vigencia_tipo,
        p_licencia_vigencia_duracionmeses,
        p_licencia_fechavencimiento,
        p_licencia_resolucion_numero,
        p_licencia_resolucion_url,
        p_licencia_numero,
        p_licencia_certificado_url,
        p_licencia_consultasverificacion,
        p_licencia_procedencia_solicitud,
        p_licencia_usuarioid,
        p_licencia_usuarionombre,
        p_licencia_codigoqr,
        p_licencia_ubigeoid,
        p_licencia_documento_id
    )
    RETURNING licencia_idlic INTO v_inserted_id;

    RETURN v_inserted_id;
END;
$$;




---------------------------------------------------------------------------------
---------------------------------------------------------------------------------


CREATE OR REPLACE FUNCTION licencia_insertarCompleto(
    p_licencia_tipotramite_tupa BIGINT,
    p_licencia_titular VARCHAR(255),
    p_licencia_ruc VARCHAR(20),
    p_licencia_razonsocial VARCHAR(255),
    p_licencia_direccionfiscal VARCHAR(255),
    p_licencia_nombrecomercial VARCHAR(255),
    p_licencia_representantelegal_dni VARCHAR(55),
    p_licencia_representantelegal_nombre VARCHAR(55),
    p_licencia_actividadcomercial VARCHAR(450),
    p_licencia_localcondicion VARCHAR(450),
    p_licencia_area VARCHAR(55),
    p_licencia_aforo INTEGER,
    p_licencia_horario VARCHAR(125),
    p_licencia_pagomonto VARCHAR(55),
    p_licencia_pago_coperacion VARCHAR(75),
    p_licencia_pagovoucher_url VARCHAR(55),
    p_licencia_direccioncomercial VARCHAR(55),
    p_licencia_dir_numero VARCHAR(10),
    p_licencia_dir_letra VARCHAR(10),
    p_licencia_dir_inter VARCHAR(10),
    p_licencia_dir_mz VARCHAR(10),
    p_licencia_dir_lote VARCHAR(10),
    p_licencia_dir_dpto VARCHAR(10),
    p_licencia_dir_referencia VARCHAR(55),
    p_licencia_tipoinspeccion VARCHAR(55),
    p_licencia_resultado_itse VARCHAR(55),
    p_licencia_riesgoitse VARCHAR(55),
    p_licencia_observacion VARCHAR(455),
    p_licencia_vigencia_estado VARCHAR(55),
    p_licencia_vigencia_tipo VARCHAR(55),
    p_licencia_vigencia_duracionmeses INTEGER,
    p_licencia_fechavencimiento DATE,
    p_licencia_resolucion_numero INTEGER,
    p_licencia_resolucion_url VARCHAR(455),
    p_licencia_numero INTEGER,
    p_licencia_certificado_url VARCHAR(455),
    p_licencia_consultasverificacion INTEGER,
    p_licencia_procedencia_solicitud VARCHAR(20),
    p_licencia_usuarioid BIGINT,
    p_licencia_usuarionombre VARCHAR(45),
    p_licencia_codigoqr VARCHAR(20),
    p_licencia_ubigeoid BIGINT,
    p_licencia_documento_id BIGINT
) RETURNS BIGINT
LANGUAGE plpgsql
AS $$
DECLARE
    v_inserted_id BIGINT;
BEGIN
    INSERT INTO siga_licencia (
        licencia_tipotramite_tupa,
        licencia_titular,
        licencia_ruc,
        licencia_razonsocial,
        licencia_direccionfiscal,
        licencia_nombrecomercial,
        licencia_representantelegal_dni,
        licencia_representantelegal_nombre,
        licencia_actividadcomercial,
        licencia_localCondicion,
        licencia_area,
        licencia_aforo,
        licencia_horario,
        licencia_pagomonto,
        licencia_pago_coperacion,
        licencia_pagovoucher_url,
        licencia_direccioncomercial,
        licencia_dir_numero,
        licencia_dir_letra,
        licencia_dir_inter,
        licencia_dir_mz,
        licencia_dir_lote,
        licencia_dir_dpto,
        licencia_dir_referencia,
        licencia_tipoinspeccion,
        licencia_resultado_itse,
        licencia_riesgoitse,
        licencia_observacion,
        licencia_vigencia_estado,
        licencia_vigencia_tipo,
        licencia_vigencia_duracionmeses,
        licencia_fechavencimiento,
        licencia_resolucion_numero,
        licencia_resolucion_url,
        licencia_numero,
        licencia_certificado_url,
        licencia_consultasverificacion,
        licencia_procedencia_solicitud,
        licencia_usuarioid,
        licencia_usuarionombre,
        licencia_codigoqr,
        licencia_ubigeoid,
        licencia_documento_id
    ) VALUES (
        p_licencia_tipotramite_tupa,
        p_licencia_titular,
        p_licencia_ruc,
        p_licencia_razonsocial,
        p_licencia_direccionfiscal,
        p_licencia_nombrecomercial,
        p_licencia_representantelegal_dni,
        p_licencia_representantelegal_nombre,
        p_licencia_actividadcomercial,
        p_licencia_localcondicion,
        p_licencia_area,
        p_licencia_aforo,
        p_licencia_horario,
        p_licencia_pagomonto,
        p_licencia_pago_coperacion,
        p_licencia_pagovoucher_url,
        p_licencia_direccioncomercial,
        p_licencia_dir_numero,
        p_licencia_dir_letra,
        p_licencia_dir_inter,
        p_licencia_dir_mz,
        p_licencia_dir_lote,
        p_licencia_dir_dpto,
        p_licencia_dir_referencia,
        p_licencia_tipoinspeccion,
        p_licencia_resultado_itse,
        p_licencia_riesgoitse,
        p_licencia_observacion,
        p_licencia_vigencia_estado,
        p_licencia_vigencia_tipo,
        p_licencia_vigencia_duracionmeses,
        p_licencia_fechavencimiento,
        p_licencia_resolucion_numero,
        p_licencia_resolucion_url,
        p_licencia_numero,
        p_licencia_certificado_url,
        p_licencia_consultasverificacion,
        p_licencia_procedencia_solicitud,
        p_licencia_usuarioid,
        p_licencia_usuarionombre,
        p_licencia_codigoqr,
        p_licencia_ubigeoid,
        p_licencia_documento_id
    )
    RETURNING licencia_idlic INTO v_inserted_id;

    RETURN v_inserted_id;
END;
$$;


---------------------------------------------------------------------------------
---------------------------------------------------------------------------------


CREATE OR REPLACE FUNCTION licencia_actualizar_licencia(
    p_licencia_idlic BIGINT,
    p_licencia_certificado_url VARCHAR(455)
) RETURNS BOOLEAN
LANGUAGE plpgsql
AS $$
DECLARE
    v_rows_updated INTEGER;
BEGIN
    UPDATE siga_licencia
    SET
        licencia_certificado_url = p_licencia_certificado_url,
        licencia_fechaultimamod = CURRENT_TIMESTAMP
    WHERE licencia_idlic = p_licencia_idlic;

    GET DIAGNOSTICS v_rows_updated = ROW_COUNT;

    RETURN v_rows_updated > 0;
END;
$$;




---------------------------------------------------------------------------------
---------------------------------------------------------------------------------



CREATE OR REPLACE FUNCTION licencia_actualizar_resolucion(
    p_licencia_idlic BIGINT,
    p_licencia_resolucion_url VARCHAR(455)
) RETURNS BOOLEAN
LANGUAGE plpgsql
AS $$
DECLARE
    v_rows_updated INTEGER;
BEGIN
    UPDATE siga_licencia
    SET
        licencia_resolucion_url = p_licencia_resolucion_url,
        licencia_fechaultimamod = CURRENT_TIMESTAMP
    WHERE licencia_idlic = p_licencia_idlic;

    GET DIAGNOSTICS v_rows_updated = ROW_COUNT;

    RETURN v_rows_updated > 0;
END;
$$;




---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION licencia_actualizar(
    p_licencia_idlic BIGINT,
    p_licencia_tipo VARCHAR(55),
    p_licencia_titular VARCHAR(255),
    p_licencia_ruc VARCHAR(20),
    p_licencia_razonsocial VARCHAR(255),
    p_licencia_direccionfiscal VARCHAR(255),
    p_licencia_nombrecomercial VARCHAR(255),
    p_licencia_representantelegal_dni VARCHAR(55),
    p_licencia_representantelegal_nombre VARCHAR(55),
    p_licencia_actividadcomercial VARCHAR(450),
    p_licencia_localcondicion VARCHAR(450),
    p_licencia_area VARCHAR(55),
    p_licencia_aforo INTEGER,
    p_licencia_pagomonto VARCHAR(55),
    p_licencia_pago_coperacion VARCHAR(75),
    p_licencia_direccioncomercial VARCHAR(55),
    p_licencia_dir_numero VARCHAR(10),
    p_licencia_dir_letra VARCHAR(10),
    p_licencia_dir_inter VARCHAR(10),
    p_licencia_dir_mz VARCHAR(10),
    p_licencia_dir_lote VARCHAR(10),
    p_licencia_dir_dpto VARCHAR(10),
    p_licencia_dir_referencia VARCHAR(55),
    p_licencia_zonificacion VARCHAR(55),
    p_licencia_tipoinspeccion VARCHAR(55),
    p_licencia_resultado_itse VARCHAR(55),
    p_licencia_riesgoitse VARCHAR(55),
    p_licencia_observacion VARCHAR(455),
    p_licencia_vigencia_estado VARCHAR(55),
    p_licencia_vigencia_tipo VARCHAR(55),
    p_licencia_vigencia_duracionmeses INTEGER,
    p_licencia_fechavencimiento DATE,
    p_licencia_resolucion_numero INTEGER,
    p_licencia_numero INTEGER
) RETURNS BOOLEAN
LANGUAGE plpgsql
AS $$
DECLARE
    v_rows_updated INTEGER;
BEGIN
    UPDATE siga_licencia
    SET
        licencia_tipo = p_licencia_tipo,
        licencia_titular = p_licencia_titular,
        licencia_ruc = p_licencia_ruc,
        licencia_razonsocial = p_licencia_razonsocial,
        licencia_direccionfiscal = p_licencia_direccionfiscal,
        licencia_nombrecomercial = p_licencia_nombrecomercial,
        licencia_representantelegal_dni = p_licencia_representantelegal_dni,
        licencia_representantelegal_nombre = p_licencia_representantelegal_nombre,
        licencia_actividadcomercial = p_licencia_actividadcomercial,
        licencia_localcondicion = p_licencia_localcondicion,
        licencia_area = p_licencia_area,
        licencia_aforo = p_licencia_aforo,
        licencia_pagomonto = p_licencia_pagomonto,
        licencia_pago_coperacion = p_licencia_pago_coperacion,
        licencia_direccioncomercial = p_licencia_direccioncomercial,
        licencia_dir_numero = p_licencia_dir_numero,
        licencia_dir_letra = p_licencia_dir_letra,
        licencia_dir_inter = p_licencia_dir_inter,
        licencia_dir_mz = p_licencia_dir_mz,
        licencia_dir_lote = p_licencia_dir_lote,
        licencia_dir_dpto = p_licencia_dir_dpto,
        licencia_dir_referencia = p_licencia_dir_referencia,
        licencia_zonificacion = p_licencia_zonificacion,
        licencia_tipoinspeccion = p_licencia_tipoinspeccion,
        licencia_resultado_itse = p_licencia_resultado_itse,
        licencia_riesgoitse = p_licencia_riesgoitse,
        licencia_observacion = p_licencia_observacion,
        licencia_vigencia_estado = p_licencia_vigencia_estado,
        licencia_vigencia_tipo = p_licencia_vigencia_tipo,
        licencia_vigencia_duracionmeses = p_licencia_vigencia_duracionmeses,
        licencia_fechavencimiento = p_licencia_fechavencimiento,
        licencia_resolucion_numero = p_licencia_resolucion_numero,
        licencia_numero = p_licencia_numero,
        licencia_fechaultimamod = CURRENT_TIMESTAMP
    WHERE licencia_idlic = p_licencia_idlic;

    GET DIAGNOSTICS v_rows_updated = ROW_COUNT;

    RETURN v_rows_updated > 0;
END;
$$;


---------------------------------------------------------------------------------
---------------------------------------------------------------------------------


CREATE OR REPLACE FUNCTION licencia_eliminar(p_licencia_idlic BIGINT)
RETURNS BOOLEAN
LANGUAGE plpgsql
AS $$
DECLARE
    v_rows_deleted INTEGER;
BEGIN
    DELETE FROM siga_licencia
    WHERE licencia_idlic = p_licencia_idlic;

    GET DIAGNOSTICS v_rows_deleted = ROW_COUNT;

    RETURN v_rows_deleted > 0;
END;
$$;


---------------------------------------------------------------------------------
---------------------------------------------------------------------------------



CREATE OR REPLACE FUNCTION licencia_listartabla_filtro(
    p_estado VARCHAR(75) DEFAULT NULL,
    p_mes_emision INTEGER DEFAULT NULL,
    p_anio_emision INTEGER DEFAULT NULL,
    p_fecha_inicio DATE DEFAULT NULL,
    p_fecha_fin DATE DEFAULT NULL
)
RETURNS TABLE(
    idlic BIGINT,
    tipo VARCHAR(55),
    titular VARCHAR(255),
    ruc VARCHAR(20),
    nombrecomercial VARCHAR(255),
    representantelegal_dni VARCHAR(55),
    representantelegal_nombre VARCHAR(55),
    estado VARCHAR(75),
    vigencia_estado VARCHAR(55),
    vigencia_duracionmeses INTEGER,
    fechaemision DATE,
    fechavencimiento DATE,
    certificado_url VARCHAR(455)
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        l.licencia_idlic AS idlic,
        l.licencia_tipo AS tipo,
        l.licencia_titular AS titular,
        l.licencia_ruc AS ruc,
        l.licencia_nombrecomercial AS nombrecomercial,
        l.licencia_representantelegal_dni AS representantelegal_dni,
        l.licencia_representantelegal_nombre AS representantelegal_nombre,
        l.licencia_estado AS estado,
        l.licencia_vigencia_estado AS vigencia_estado,
        l.licencia_vigencia_duracionmeses AS vigencia_duracionmeses,
        l.licencia_fechaemision AS fechaemision,
        l.licencia_fechavencimiento AS fechavencimiento,
        l.licencia_certificado_url AS certificado_url
    FROM siga_licencia AS l
    WHERE
        (p_estado IS NULL OR l.licencia_estado = p_estado)
        AND (p_mes_emision IS NULL OR EXTRACT(MONTH FROM l.licencia_fechaemision) = p_mes_emision)
        AND (p_anio_emision IS NULL OR EXTRACT(YEAR FROM l.licencia_fechaemision) = p_anio_emision)
        AND ((p_fecha_inicio IS NULL OR l.licencia_fechaemision >= p_fecha_inicio)
        AND (p_fecha_fin IS NULL OR l.licencia_fechaemision <= p_fecha_fin));
END;
$$ LANGUAGE plpgsql;